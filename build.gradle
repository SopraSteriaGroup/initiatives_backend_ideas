buildscript {
	ext {
		kotlinVersion = '1.1.2'
		springBootVersion = '2.0.0.BUILD-SNAPSHOT'
		jacksonVersion = '2.8.8'
		reactorVersion = '3.0.7.RELEASE'
		reactorKotlinVersion = '1.0.0.M2'
		restAssuredVersion = '3.0.3'
        asciidoctorVersion = '1.5.3'
        springRestDocsVersion = '1.2.1.RELEASE'
	}
	repositories {
        jcenter()
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}")
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:${asciidoctorVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.asciidoctor.convert'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

ext {
    snippetsDir = file('build/generated-snippets')
}

ext['spring-restdocs.version'] = '1.2.1.RELEASE'

compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
    jcenter()
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile("io.projectreactor:reactor-kotlin-extensions:${reactorKotlinVersion}")
	compile("com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}")
	compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}")
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('io.projectreactor.addons:reactor-test')
	testCompile("io.rest-assured:rest-assured:${restAssuredVersion}")
	testCompile("org.springframework.restdocs:spring-restdocs-restassured:${springRestDocsVersion}")
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    dependsOn test
    sourceDir = file('src/docs/asciidoc')
    inputs.dir snippetsDir
    outputDir "$projectDir/src/main/resources/static"
	attributes 'snippets': snippetsDir
}

jar {
    dependsOn asciidoctor
    baseName = 'initiatives-ideas'
    version =  version
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

task cleanTempDir(type: Delete) {
	delete asciidoctor.outputDir
}

clean {
	dependsOn cleanTempDir
}